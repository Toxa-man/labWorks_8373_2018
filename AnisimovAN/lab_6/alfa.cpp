#include "stdafx.h"
#include "pch.h"
#include <iostream>
#include "Console.h"
#include "windows.h"
#include <string>
#include <sstream>

using namespace ::std;
int c = 1; 
int e = 1;

bool spawn = true; //true=coin, false=enemy
Console console;

void position(int y, int x)
{
	if (map[y - 1][x] == 'W')
	{
		map[y - 1][x] = ' ';
		hp--;
	}

	if (map[y - 1][x] == '+')
	{
		if (hp < 3)
		{
			hp++;
		}
		map[y - 1][x] = ' ';
	}

	if (map[y - 1][x] == '*')
	{
		map[y - 1][x] = ' ';
		score++;
	}
}


int main()
{
	do {
		do
		{
			system("cls");

			cout <<
				"             ###########################################################################\n"
				"             #%%%%%%%%%%%%%%%###@%%%%%%%%%%%%%%###%%%%%%%%%%%%%%%@#@%%%%%%%####%%%%%%%##\n"
				"             #%%%%%%%%%%%%%%%%#@%%%%%%%%%%%%%%%%#@%%%%%%%%%%%%%%%%#@%%%%%%%@##%%%%%%%%##\n"
				"             #%%%%%%%%%%%%%%%%#@%%%%%%%%%%%%%%%%#@%%%%%%%%%%%%%%%%#@%%%%%%%%##%%%%%%%%##\n"
				"             #%%%%%%####%%%%%%#@%%%%%@####%%%%%%#@%%%%%#####%%%%%%#@%%%%%%%%@%%%%%%%%%##\n"
				"             #%%%%%%####@%%%%%#@%%%%%@####%%%%%%#@%%%%%#####%%%%%%#@%%%%%%%%%%%%%%%%%%##\n"
				"             #%%%%%%####@%%%%%#@%%%%%@####%%%%%%#@%%%%%#####%%%%%%#@%%%%%%%%%%%%%%%%%%##\n"
				"             #%%%%%%####@%%%%%#@%%%%%@####%%%%%%#@%%%%%#####%%%%%%#@%%%%%%%%%%%%%%%%%%##\n"
				"             #%%%%%%####@%%%%%#@%%%%%@####%%%%%%#@%%%%%#####%%%%%%#@%%%%%%%%%%%%%%%%%%##\n"
				"             #%%%%%%####@%%%%%#@%%%%%@####%%%%%%#@%%%%%#####%%%%%%#@%%%%%%%%%%%%%%%%%%##\n"
				"             #%%%%%%####@%%%%%#@%%%%%@####%%%%%%#@%%%%%#####%%%%%%#@%%%%#@%%%%%%%%%%%%##\n"
				"             #%%%%%%####%%%%%%#@%%%%%@####%%%%%%#@%%%%%#####%%%%%%#@%%%%##%%%%%@@%%%%%##\n"
				"             #%%%%%%####%%%%%%#@%%%%%%####%%%%%%#@%%%%%####@%%%%%%#@%%%%##%%%%%#@%%%%%##\n"
				"             #%%%%%%#@%%%%%%%%#@%%%%%%%%@#%%%%%%#@%%%%%@#%%%%%%%%%#@%%%%##@%%%@#@%%%%%##\n"
				"             #%%%%%%%%%%%%%%%%#@%%%%%%%%%%%%%%%%#@%%%%%%%%%%%%%%%@#@%%%%###%%%##@%%%%%##\n"
				"             #%%%%%%%%%%%%%%%%@###%%%%%%%%%%%@######%%%%%%%%%%%@####%%%%###@%@##@%%%%%##\n"
				"             #%%%%%%%%%%%%%%########@%%%%%%###########@%%%%%%#########%%####%###@%%%%%##\n"
				"             #%%%%%%%%%%%@#############%@################%@#####################@%%%%%##\n"
				"             #%%%%%%%%%#########################################################@%%%%%##\n"
				"             #%%%%%%@###########################################################@%%%%%##\n"
				"             #%%%%##############################################################@%%%%%##\n"
				"             #%@###################################################################%%%##\n"
				"             ########################################################################@@#\n"
				"             ###########################################################################\n"
				<< endl;


			cout <<
				"                                       PRESS ANY BUTTON TO START" << endl;
			system("pause");
			if (GetAsyncKeyState(VK_RETURN))
			{
				c = 0;
				break;
			}

		} while (c != 0);



		system("cls");

		cout << "WELCOME TO HELL" << endl;
		cout << endl;
		cout << "3";
		Sleep(1000);
		system("cls");

		cout << "WELCOME TO HELL" << endl;
		cout << endl;
		cout << "2";
		Sleep(1000);
		system("cls");

		cout << "WELCOME TO HELL" << endl;
		cout << endl;
		cout << "1";
		Sleep(1000);
		system("cls");

		for (int i = 0; i < map_size_height; i++)
		{
			cout << map[i] << endl;
		}

		while (hp > 0)
		{
			Sleep(200);    //задержка в 1000 миллисекунд (1 секунда)

			for (int i = 1; i < map_size_width - 1; i++)
			{
				if ((map[map_size_height - 1][i] == 'W') || (map[map_size_height - 1][i] == '*') || (map[map_size_height - 1][i] == '+'))
				{
					map[map_size_height - 1][i] = ' ';
				}
			}

			if (spawn == true)
			{
				if (score == heal)
				{
					int rnd_pos = 1 + rand() % (map_size_width - 2);
					map[1][rnd_pos] = '+';
					heal += 10;
				}
				else
				{
					int rnd_pos = 1 + rand() % (map_size_width - 2);
					map[1][rnd_pos] = '*';
				}
				spawn = false;
			}
			else
			{
				if (score == heal)
				{
					int rnd_pos = 1 + rand() % (map_size_width - 2);
					map[1][rnd_pos] = '+';
					heal += 10;
				}
				else
				{
					int rnd_pos = 1 + rand() % (map_size_width - 4);
					map[1][rnd_pos] = 'W';
					map[1][rnd_pos + 1] = 'W';
				}
				spawn = true;
			}

			stringstream ss1;
			ss1 << score;
			string status = "Score: ";
			status += ss1.str();

			stringstream ss2;
			ss2 << hp;
			string h_p = "HP: ";
			h_p += ss2.str();

			system("cls");

			for (int i = map_size_width - 1; i > 0; i--)
			{
				for (int j = map_size_height - 2; j > 0; j--)
				{
					if (map[i][j] == '*')
					{
						map[i][j] = ' ';
						map[i + 1][j] = '*';
					}
				}
			}

			for (int i = map_size_width - 1; i > 0; i--)
			{
				for (int j = map_size_height - 2; j > 0; j--)
				{
					if (map[i][j] == 'W')
					{
						map[i][j] = ' ';
						map[i + 1][j] = 'W';
					}
				}
			}

			for (int i = map_size_width - 1; i > 0; i--)
			{
				for (int j = map_size_height - 2; j > 0; j--)
				{
					if (map[i][j] == '+')
					{
						map[i][j] = ' ';
						map[i + 1][j] = '+';
					}
				}
			}

			for (int i = 0; i < map_size_height; i++)
			{
				cout << map[i] << endl;
			}

			cout << endl;

			switch (hp)
			{
			case 3: cout <<
				"####################################################################################\n"
				"####################################################################################\n"
				"####################################################################################\n"
				<< status << endl << h_p << endl <<
				"####################################################################################\n"
				"####################################################################################\n"
				"####################################################################################\n"
				<< endl << endl <<

				"##########@@@@@@@@@%%%%@@@%=%%%@@@@%%%%%@@@@@@@@@@@@####@@@#########################\n"
				"##########@@@@@@@@@%%%%@@@%%%%@@@@@@%%%%@@@@@@@%%@@@@@@@@@@@########################\n"
				"#######@@@@@@%%%%%%@@@@%%%@@@@@@@%%%@@@@@@%%%%%%%%%%%%%%%%%%@@@@@@####@@############\n"
				"#######@@@@@@%%%%%%%%%@@@@%==%@@@%%%%%%==============%%%%%%%%%%%@@@@@@@@############\n"
				"#######@@@@@@%%%========%======================================%%%@@@@@@############\n"
				"#######@@@@@%%%=================================================%%%@@@@@############\n"
				"#######@@@%%%===++++++++++===========================++++++++++==%%@@@@@############\n"
				"#######@@@%%%===+++*******++++++====%%%%%%%====++++++*******+++===%%%@@@############\n"
				"#######@@@%%%===+***::::::******+++++++++++++++******::::::***+===%%%@@@############\n"
				"%*=####@@@%%%====+++++********+++===+++++++===+++********+++++====%%%@@@####=*%#####\n"
				"%=%@@@@@@@%%%@@@@@@@@@@===++++===%%%=======%%%===++++===%@@@@@@@@@%%%@@@@@@@%=######\n"
				"==%@@@@@@%%%====@@@@##########@@###@%%%%%%%@###@@##########@@@@====%%%@@@@@@%==%####\n"
				"%%%@@@@@%%===%%%%%%####%%%@@@#####@@=+++++=@@#####%%@###@%%=**+=%%===%%@@@@@%%%@####\n"
				"%%%@@@%%%====%%%===%@@%===@@@####@@%=+++**+%@@###@%%%@##%+++**+%%%====%%%@@@%%%@####\n"
				"@@@@@@%%%====%%====+***===%@@@@@%%%=++++**+=%%%@@@@@%===***+====%%====%%%@@@@@@#####\n"
				"%%%@@@%%%+**+++++++====%%%====++++++****::**+++++====%%%====+++++++**+%%%@@@%%%@####\n"
				"####@@@%%%=======++****::**+++=======+++++=======+++**::****++=======%%%@@@#########\n"
				"####+*%%%=======+++*:::***+++%@@@%%%%%%%%%%%%%@@@%+++***:::*+++=======%%%*+=########\n"
				"######@@%=======+***::***++++=%%%%%%%%%%%%%%%%%%%=++++***::***+=======%@@###########\n"
				"######@@@=++====+***::*+++++++++++++=======+++++++++++++*::***+====++=@@@###########\n"
				"########@%======+++****++++++*::::::*******::::::*++++++****+++======%@#############\n"
				"#######=*+%%====+++++++===%%%%=======%%%%%=======%%%%===+++++++====%%+*=############\n"
				"##########@@%====++++++===%%%=====================%%%===++++++====%@@###############\n"
				"############@%%%===++++++++++++++*************++++++++++++++===%%%@#################\n"
				"##############@%===++++**++++====%%%%%%%%%%%%%====++++**++++===%@###################\n"
				"################@@%===+++++++++++++++++++++++++++++++++++===%%@#####################\n"
				"##################@%%%====++++++++++*******++++++++++====%%%@#######################\n"

				<< endl;
				break;

			case 2: cout <<
				"####################################################################################\n"
				"####################################################################################\n"
				"####################################################################################\n"
				<< status << endl << h_p << endl <<
				"####################################################################################\n"
				"####################################################################################\n"
				"####################################################################################\n"
				<< endl << endl <<


				"####################@@@@@@@@@@@==#######%%@@#@@#@@##@@#############################\n"
				"#################@@#@@@%%%@@%%%@@@@@@@####@@@==@@@@#@@@@@@###@@####################\n"
				"#################@@@@@%%%===%@@++@@%==%%@@@##@@===%%@@%=%@@@@@#####################\n"
				"##################@@@%%%=====%%==@@%==++@@%++@@=====%%===%%@@@@####################\n"
				"###################%%%=%=======%%==%%%%%%%=====%%=====%%%%%@@@@####################\n"
				"###################%%%%=++*****++++===%%%%===+++++****++===%@@#####################\n"
				"###################@%===*+:::::**+++==+++++++==++***::+*+==%%@@####################\n"
				"#################@@%%=++**:::::**+++==+++++++==++**:::***++%@#@####################\n"
				"############==%@@@@%%@%@@@%%=++::***++=====++****+==@#@@@@@=%@#@@==################\n"
				"############==%@@@@%@+*+===%@##@%%%+*+**+++**==@@@##%====+*%%###@@=################\n"
				"############%%@@@%%@@%%=##==+**##@@%%%**===%=@@##@==**###==@@%%%@@%################\n"
				"############@@@@@%%%%@@@==@@###**###@@==::+@@##==%##@@**+@@%%%%%@@@@###############\n"
				"############%%@@@%%++===@@%%%%%++::+%%+=**+=%::+++%%%%@@%==++%%%@@%%###############\n"
				"############%%@@@%%+++++%%%@%%%++::*==++***==::+++%%%%%%=++++%%%@@%%###############\n"
				"############%=%@@%%++***==@@@%%++:-*++++::*++::++=%%@@==+**++%%%@@==###############\n"
				"##############@@@%%=++**:*:*:::**=++**++:::**=+::***::*****==%%%@@#################\n"
				"##############@@@%=%%=====**+++%%@@%=%=======@@%==++**===++%=%%%@@#################\n"
				"##############@@@==%%%%%==**=%%%%@@@@%%%%%%%%@@%%%%%**===%%%%===@@#################\n"
				"#################%%%%%%%==++%@@==+++=%@@@@@@@*+===@@++===%%===%%###################\n"
				"#################%%==%%%==++%@@==::******+=@@**===%@++===%%+=%%%###################\n"
				"#################%@==%%%==++=%%+=***++++++%@%**+==%%++==%%%==@%@###################\n"
				"#####################@%%%%%%=++%%##############%%==+=%%%%%%########################\n"
				"#####################@%%%%%%=++==%%%@@@@@@@@@%%===++%%%%@%%########################\n"
				"########################%%%%=====%%%%%=====%%=%=====%%%%@##########################\n"
				"########################%@@%=====%=%%%=====%%=======%%@%###########################\n"
				"###########################%@@====%=%%%===%%=======%%@%###########################\n"

				<< endl;

				break;

			case 1:  cout <<
				"####################################################################################\n"
				"####################################################################################\n"
				"####################################################################################\n"
				<< status << endl << h_p << endl <<
				"####################################################################################\n"
				"####################################################################################\n"
				"####################################################################################\n"
				<< endl << endl <<


				"########################@@@@##@@@@@%%%%%@@@@@%%%%@@###@##@%@@@@@@@@###############\n"
				"####################@@@###@@@@@#@@@%%%##%=%@@%%%@@###@@##@%@%%@@@@@###############\n"
				"####################@@@@@@@@##%=%@#@@@##@=@##%%@@#@@@@@@#%%%==%%@@################\n"
				"####################@@@@%%@@@@=+==%@####@%%%%##@%%==%@@@@======%@#################\n"
				"###################@@%%%%%%@@@===+=#####@%%=%##@%===%@%%%=+=%%%=@#################\n"
				"#############%=%###@%%%%%%%%@%+****===##%==%%%%%====%@%%%***++=%@#####%%##########\n"
				"#############=+%###@%%%%%%%%%%+****++=##%===%=====++%%%%=*:*++=%@#####==##########\n"
				"#############=+=###@%=====%%%=*::::***++=====+++**::+%%=+***===%@####@==##########\n"
				"#############%=%##@@=+=@@@@%=====+*:::==++*:*==+::*++====%@@@@%=%####@%%##########\n"
				"#############%=%##@@=+=@@@@@%%%%=+****====+**=%=**++====%@@@@@%=%@@##@%%##########\n"
				"#Z###########@@@@@%%==%@##@@##@@@==%@@#@%===%@#@@@==%@@@##@###@%%%%@@@@@##########\n"
				"#############%%%@@%=***%%=*+%@#########@@@@@@#@##########%%===+*+=%@@@%%##########\n"
				"#############%%%@@%=***===+=@@########@#@@@@@@@########@@%%===+*+==@@@%%##########\n"
				"#############%=%@@=+*::***=%@@@@@##@%@@@%====%@@@@#####%%=====+**++@@@%%##########\n"
				"################%%==+++%%===%%%%%@@%%%==+****+==%@@@@@%%%===@@%+++=###############\n"
				"##################%=+++====%##########@%%%===%%@#########=+=@@%+===###############\n"
				"##################%=+++====%##########@@%%%%%@@@#########=+=@@%+===###############\n"
				"##################@%+++**+%%%%@########################%====@#%===%###############\n"
				"####################===+*+%%=+%%%#######@@@@@#######@%%=====@@%=@#################\n"
				"####################%==++=@%====%@@#####@@@@@#####@@%%======@@%%@#################\n"
				"####################@@%===@%=====%%######@@@#####@%%========@@@@##################\n"
				"#####################@@%=%@@=+=+=%%@@@@@@@@@@@@@@@%%========@@@@##################\n"
				"#########################@@%+++++=%@@@@@@@@@@@@@@@==+++++=%%@@####################\n"
				"##########################@%++**+++%@%###@@@@@#@@%+++**++%@@######################\n"
				"############################%%===++@#@%======%%%@@+*+==%%#########################\n"
				"############################@@%==*+@##%===++===%@%+*===@@#########################\n"
				"#################################@@###@%%=%=%%%@@@%%@#############################\n"

				<< endl;
				break;
			}

			position(y, x);

			/*	if(GetAsyncKeyState(VK_UP))
				{
					console.move(-1, 0);
				}

				if (GetAsyncKeyState(VK_DOWN))
				{
					console.move(1, 0);
				}
		*/
			if (GetAsyncKeyState(VK_RIGHT))
			{
				console.move(0, 1);
			}

			if (GetAsyncKeyState(VK_LEFT))
			{
				console.move(0, -1);
			}
		}
		system("cls");

		cout << "GAME OVER" << endl;
		cout << "YOU'RE DOOMED. HELP DID NOT COME IN TIME. YOUR BODY WILL STAY HERE FOREVER" << endl;
		cout << "YOUR SCORE: " << score << endl;
		cout << endl;
		cout <<

			"######################@%%%%%%%%==================@@%%%%@@@#########################\n"
			"######################@%@%@%%%%===%==========%=%%@@%%%%@@##########################\n"
			"###########################@@@@%%%%%%%%%%%%%%%%%%@@@@%%@####@@#####################\n"
			"###############################@@@%%%%%%%%%%%%%@@@@##@@@#####@#####################\n"
			"##################################@@@@%%@@@%@@@@@#####@@##@@@@#####################\n"
			"##############%%##@@@@#############@%%@@@@@@@##@@#########@@@@##@%%################\n"
			"##############==##@#@@##############%%@@@@@@############@@@@@@##@==################\n"
			"##############==##@#@%@@@@@#########@@##@@#############@@@%%@@##@==################\n"
			"##############%%##@#@%@@@@@@@#######@@#######@@######@@@@@%%@@##@%%################\n"
			"##############%%###@%%%@@@@##@@#####@@@@@@##@%@@@@@##@@@@@%%@@##@%%################\n"
			"##############%%###@%%%@@#@##@@#####@@@@@@##@%%@@@@##@%@@@%%@@##@%%################\n"
			"##############@@@@@@%%%%%##%%%%@##@@####%%=======%%%%%%%%%%%@@@@@@@################\n"
			"##############@@@@@@%%===%%++====%%%##@@###@@%%==++===%%@@%%%%@@@@@################\n"
			"################@@%%===+=@@%%%%@@@@@@@%%%%%@@@@%%%%%%%@@##==%%@@###################\n"
			"################@@%%===+=@@%%%%@@@@@@@%%%%%@@@@%%%%%%%@@##==%%@@###################\n"
			"################@@%%=+++=@@@@@@%%=++++::::*++++%%@@@@@##@@++%%@@###################\n"
			"##################%%====%%===**==%%%==****==%%%==%%%%=+=%%==%@#####################\n"
			"##################@@%%===%%%%++%%@##%%++++%%@##%%%%%%=+=%@%%@@#####################\n"
			"####################%%%=%@@@@++@@@##@@====@@@##@@%%%%===@@%%#######################\n"
			"####################%%%%%@@@@==@##@###@@@@@##@@@@%%@@%==@@%%#######################\n"
			"####################@@@%%@@@@%=@@@@@@@@@###@@@@@#==%%===@@@@#######################\n"
			"#######################@@##@@====%%%==++++==%%%@#%%%%%=%@@#########################\n"
			"#########################@@@@%%%%%@@%@@###@@@%%%%==%%%%%###########################\n"
			"###########################@@%%%%%@@%%%%%%%%%%=====%%@@@###########################\n"

			<< endl;
		system("pause");
		cout << "IF YOU WANT TO TRY AGAIN, PRESS ENTER" << endl;
		if (GetAsyncKeyState(VK_RETURN))
		{
			hp = 3;
			score = 0;
			for (int i = 1; i < map_size_width - 1; i++)
			{
				for(int j=1;j<map_size_height;j++)
				{
					if ((map[j][i] == 'W') || (map[j][i] == '*') || (map[j][i] == '+'))
					{
						map[j][i] = ' ';
					}
				}
			}
		}
		else
		{
			e = 0;
			break;
		}
	} while (e != 0);
}